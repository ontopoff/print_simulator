$bg: #ffea78;
$blue: #5953ff;
$col_bg: #77ffcd;

@mixin transition($property: all, $duration: 0.45s, $ease: cubic-bezier(0.65,0,.076,1)) {
  transition: $property $duration $ease;
}

* {
  box-sizing: border-box;
  &::before, &::after {
    box-sizing: border-box;
  }
}

button {
  position: relative;
  display: inline-block;
  cursor: pointer;
  outline: none;
  border: 0;
  vertical-align: middle;
  text-decoration: none;
  background: transparent;
  padding: 0;
  &.btn_test {
    width: 17rem;
    height: auto;
    .circle {
      @include transition(all, 0.45s, cubic-bezier(0.65,0,.076,1));
      position: relative;
      display: block;
      margin: 0;
      width: 100%;
      height: 3rem;
      background: $bg;
      border-radius: 1.625rem;
      .icon {
        @include transition(all, 0.45s, cubic-bezier(0.65,0,.076,1));
        position: absolute;
        top: 0;
        bottom: 0;
        margin: auto;
        background: $blue;
        animation: arrowAnimate 2s linear infinite;
        &.arrow {
          @include transition(all, 0.45s, cubic-bezier(0.65,0,.076,1));
          left: 0.625rem;
          width: 1.125rem;
          height: 0.125rem;
          background: none;
          &::before {
            position: absolute;
            content: '';
            top: -0.25rem;
            right: 0.0625rem;
            width: 0.625rem;
            height: 0.625rem;
            border-top: 0.125rem solid $blue;
            border-right: 0.125rem solid $blue;
            transform: rotate(45deg);
          }
        }
      }
    }
    .button-text {
      @include transition(all, 0.45s, cubic-bezier(0.65,0,.076,1));
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      padding: 0.75rem 0;
      margin: 0 0 0 1.85rem;
      color: $blue;
      font-weight: 700;
      line-height: 1.6;
      text-align: center;
      text-transform: uppercase;
    }
  }
  &:hover {
    .circle {
      width: 100%;
      .icon {
        &.arrow {
          background: $blue;
          transform: translate(1rem, 0);
        }
      }
    }
  }
}

@keyframes arrowAnimate {
  50% {
    background: $blue;
    transform: translate(1rem, 0);
  }

}


$bg_reload: #fff;
$fg: #06c17f;
$border-width: .2rem;
$corner-size: 1rem;
$dur: .3s;

.corner-button {
  cursor: pointer;
  background: transparent;
  border: $border-width solid currentColor;
  padding: 0.5rem 1.5rem;
  color: #000;
  top: -2px;
  position: relative;
  transition: color $dur;

  &:hover {
    color: $fg;
    &::before { width: 0; }
    &::after { height: 0; }
  }
  &:active {
    border-width: $border-width / 2;
  }
  span {
    position: relative;
    z-index: 2;
  }
  &::before, &::after {
    content: '';
    position: absolute;
    background: $bg_reload;
    z-index: 1;
    transition: all $dur;
  }
  &::before {
    width: calc(100% - #{$corner-size});
    height: calc(101% + #{$border-width * 2});
    top: -$border-width;
    left: 50%;
    transform: translateX(-50%);
  }
  &::after {
    height: calc(100% - #{$corner-size});
    width: calc(101% + #{$border-width * 2});
    left: -$border-width;
    top: 50%;
    transform: translateY(-50%);
  }
}
