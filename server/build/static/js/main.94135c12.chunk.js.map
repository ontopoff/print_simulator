{"version":3,"sources":["context.js","components/Customization.js","components/Menu.js","components/Letter.js","img/error_icon.svg","img/velocity.svg","img/chronometer.svg","components/Timer.js","img/accuracy.svg","img/gold.svg","img/silver.svg","img/copper.svg","components/Results.js","components/TestWindow.js","components/Loader.js","components/Intro.js","components/Simulator.js","components/Instructions.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","useStates","context","useContext","Error","url","setUrl","loading","setLoading","checkedTypeText","setCheckedTypeText","sentenceNum","setSentenceNum","testTime","setTestTime","workoutType","setWorkoutType","ownText","setOwnText","text","setText","defaultText","setDefaultText","reload","setReload","modalMenu","setModalMenu","open","setOpen","handleChangeUrl","num","handleOwnText","e","target","value","toggleCheckbox","toggleCheckboxWorkout","handleSelectNumberSentence","handleSelectTime","ContentProvider","props","useState","useMemo","Provider","Customization","toggle","backdrop","keyboard","Modal","isOpen","ModalHeader","className","ModalBody","type","id","onChange","checked","htmlFor","placeholder","defaultValue","ModalFooter","Button","color","onClick","Menu","Letter","typed","curr","letter","showErr","setShowErr","spanClass","setSpanClass","useEffect","useEventListener","Timer","time","started","resTime","setResTime","currLetterIndex","setSpeed","handleStop","errors","setTimeLimitStatus","handleTimerActivity","diffTime","Date","now","currTime","minutes","Math","floor","sec","handleResTime","currSpeed","handleSpeed","timer","setInterval","clearInterval","src","chronometer_icon","Results","accuracy","wpm","accuracy_icon","gold_medal","silver_medal","copper_medal","TestWindow","loaded","FlipInX","handleClickTestBtn","handleReload","queue","setQueue","setErrors","setCurrLetterIndex","filled","setFilled","speed","setTime","setStarted","timeLimitStatus","showRes","setShowRes","setAccuracy","setWPM","typedSymbols","res","countAccuracy","finalWPM","countWPM","key","length","velocity_icon","error_icon","map","i","Loader","Intro","aria-hidden","Simulator","setLoaded","FadeInLeft","styled","div","keyframes","fadeInLeft","flipInX","initializeStartWorkout","data","fetch","then","response","json","catch","error","provideFetchReq","Instructions","modalInstructions","setModalInstructions","toggleInstructions","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94135c12.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nconst AppContext = React.createContext();\r\n\r\nfunction useStates() {\r\n    const context = React.useContext(AppContext)\r\n\r\n    if (!context) {\r\n        throw new Error(`useStates must be used within a ContentProvider`)\r\n    }\r\n\r\n    const [\r\n        url,\r\n        setUrl,\r\n        loading,\r\n        setLoading,\r\n        checkedTypeText,\r\n        setCheckedTypeText,\r\n        sentenceNum,\r\n        setSentenceNum,\r\n        testTime,\r\n        setTestTime,\r\n        workoutType,\r\n        setWorkoutType,\r\n        ownText,\r\n        setOwnText,\r\n        text,\r\n        setText,\r\n        defaultText,\r\n        setDefaultText,\r\n        reload,\r\n        setReload,\r\n        modalMenu,\r\n        setModalMenu,\r\n        open,\r\n        setOpen\r\n    ] = context\r\n\r\n    function handleOwnText(e) {\r\n        setOwnText(e.target.value);\r\n    }\r\n\r\n    function toggleCheckbox() {\r\n        setCheckedTypeText(!checkedTypeText);\r\n    }\r\n\r\n    function toggleCheckboxWorkout() {\r\n        setWorkoutType(!workoutType);\r\n    }\r\n\r\n    function handleSelectNumberSentence(e) {\r\n        setSentenceNum(e.target.value);\r\n        handleChangeUrl(e.target.value);\r\n    }\r\n\r\n    function handleSelectTime(e) {\r\n        setTestTime(e.target.value);\r\n    }\r\n\r\n    function handleChangeUrl(num) {\r\n        setUrl(\"https://baconipsum.com/api/?type=all-meat&sentences=\" + num + \"&format=json\");\r\n    }\r\n\r\n    return {\r\n        url,\r\n        setUrl,\r\n        loading,\r\n        setLoading,\r\n        checkedTypeText,\r\n        setCheckedTypeText,\r\n        sentenceNum,\r\n        setSentenceNum,\r\n        testTime,\r\n        setTestTime,\r\n        workoutType,\r\n        setWorkoutType,\r\n        ownText,\r\n        setOwnText,\r\n        text,\r\n        setText,\r\n        defaultText,\r\n        setDefaultText,\r\n        reload,\r\n        setReload,\r\n        modalMenu,\r\n        setModalMenu,\r\n        open,\r\n        setOpen,\r\n        handleChangeUrl,\r\n        handleOwnText,\r\n        toggleCheckbox,\r\n        toggleCheckboxWorkout,\r\n        handleSelectNumberSentence,\r\n        handleSelectTime\r\n    }\r\n}\r\n\r\nfunction ContentProvider(props) {\r\n\r\n    const [defaultText, setDefaultText] = useState([\"Chislic kielbasa ham pancetta, tenderloin kevin turducken\" +\r\n    \" sausage t-bone pork alcatra tri-tip swine. Tail biltong ribeye hamburger ball tip. Pork chop turkey turducken,\" +\r\n    \" chislic bacon burgdoggen rump cupim hamburger jowl flank frankfurter sausage ground round. Bresaola drumstick\" +\r\n    \" cupim porchetta beef kielbasa pastrami burgdoggen pork brisket ribeye short ribs. Short loin boudin shoulder\" +\r\n    \" biltong kevin pork belly pork chop.\"])\r\n\r\n\r\n    const [url, setUrl] = useState(\"https://baconipsum.com/api/?type=all-meat&sentences=5&format=json\")\r\n    const [loading, setLoading] = useState(false);\r\n    const [checkedTypeText, setCheckedTypeText] = useState(false);\r\n    const [sentenceNum, setSentenceNum] = useState(5);\r\n    const [testTime, setTestTime] = useState(1);\r\n    const [workoutType, setWorkoutType] = useState(false);\r\n    const [ownText, setOwnText] = useState(\"\");\r\n    const [text, setText] = useState(\"\");\r\n    const [reload, setReload] = useState(false);\r\n    const [modalMenu, setModalMenu] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const value = React.useMemo(() =>\r\n        [\r\n            url,\r\n            setUrl,\r\n            loading,\r\n            setLoading,\r\n            checkedTypeText,\r\n            setCheckedTypeText,\r\n            sentenceNum,\r\n            setSentenceNum,\r\n            testTime,\r\n            setTestTime,\r\n            workoutType,\r\n            setWorkoutType,\r\n            ownText,\r\n            setOwnText,\r\n            text,\r\n            setText,\r\n            defaultText,\r\n            setDefaultText,\r\n            reload,\r\n            setReload,\r\n            modalMenu,\r\n            setModalMenu,\r\n            open,\r\n            setOpen\r\n        ], [url, loading, checkedTypeText, sentenceNum, testTime, workoutType, ownText, text, defaultText, reload, modalMenu, open])\r\n    return <AppContext.Provider value={value} {...props} />\r\n}\r\n\r\nexport {ContentProvider, useStates}","import React, {useState} from \"react\";\r\nimport {Modal, ModalHeader, ModalBody, ModalFooter, Button} from \"reactstrap\";\r\nimport \"../css/checkbox_styles.css\";\r\n\r\n\r\nconst Customization = (props) => {\r\n\r\n    const {\r\n        toggle,\r\n        modalMenu,\r\n        checkedTypeText,\r\n        workoutType,\r\n        ownText,\r\n        testTime,\r\n        sentenceNum,\r\n        handleOwnText,\r\n        toggleCheckbox,\r\n        toggleCheckboxWorkout,\r\n        handleSelectNumberSentence,\r\n        handleSelectTime\r\n    } = props;\r\n\r\n    const [backdrop, setBackdrop] = useState(\"static\");\r\n    const [keyboard, setKeyboard] = useState(true);\r\n\r\n    return (\r\n        <Modal isOpen={modalMenu} toggle={toggle} backdrop={backdrop} keyboard={keyboard}>\r\n            <ModalHeader toggle={toggle}>\r\n                <p className=\"modal_header\">Настройки</p>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <div className=\"row justify-content-center modal_body\">\r\n                    <div className=\"col-auto\">\r\n                        <div className=\"modal_group\">\r\n                            <p className=\"menu_label\">Использовать для тренировки</p>\r\n                            <div className=\"btn-group\">\r\n                                <input type=\"checkbox\" id=\"checkbox_text\" onChange={toggleCheckbox} checked={checkedTypeText}/>\r\n                                <label className=\"label_checkbox_text\" htmlFor=\"checkbox_text\"></label>\r\n                            </div>\r\n                        </div>\r\n                        {checkedTypeText ?\r\n                            <div className=\"modal_group mt-3\">\r\n                                <p className=\"menu_label\">Введите ваш текст</p>\r\n                                <div className=\"input-group\">\r\n                                    <textarea className=\"form-control textarea\"\r\n                                              placeholder=\"Введите что-нибудь!\" onChange={handleOwnText} value={ownText}></textarea>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className=\"modal_group mt-3\">\r\n                                <div className=\"form-group\">\r\n                                    <p className=\"menu_label\">Количество предложений</p>\r\n                                    <select className=\"form-control\" onChange={handleSelectNumberSentence}\r\n                                            defaultValue={sentenceNum}>\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                        <option>6</option>\r\n                                        <option>7</option>\r\n                                        <option>8</option>\r\n                                        <option>9</option>\r\n                                        <option>10</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div className=\"modal_group mt-3 mb-3\">\r\n                            <p className=\"menu_label\">Тип тренировки</p>\r\n                            <div className=\"btn-group\">\r\n                                <input type=\"checkbox\" id=\"checkbox_workout\" onChange={toggleCheckboxWorkout} checked={workoutType}/>\r\n                                <label className=\"label_checkbox_workout\" htmlFor=\"checkbox_workout\"></label>\r\n                            </div>\r\n                        </div>\r\n                        {workoutType ?\r\n                            <div className=\"modal_group mb-3\">\r\n                                <div className=\"form-group\">\r\n                                    <p className=\"menu_label\">Количество минут</p>\r\n                                    <select className=\"form-control\" onChange={handleSelectTime}\r\n                                            defaultValue={testTime}>\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <></>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" onClick={toggle}>Сохранить</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n\r\n    );\r\n}\r\n\r\nexport default Customization;","import React, {useState} from \"react\";\r\nimport {useStates} from \"../context\";\r\nimport Customization from \"./Customization\";\r\n\r\nconst Menu = () => {\r\n\r\n    const {\r\n        loading,\r\n        checkedTypeText,\r\n        sentenceNum,\r\n        testTime,\r\n        workoutType,\r\n        ownText,\r\n        modalMenu,\r\n        setModalMenu,\r\n        handleOwnText,\r\n        toggleCheckbox,\r\n        toggleCheckboxWorkout,\r\n        handleSelectNumberSentence,\r\n        handleSelectTime,\r\n        setReload,\r\n        open\r\n    } = useStates();\r\n\r\n\r\n\r\n    const toggle = () => {\r\n        setModalMenu(!modalMenu);\r\n        if(open) {\r\n            setReload(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"menu height\">\r\n                {loading ? (<div className=\"loading_outer\"></div>) : <></>}\r\n                <button className=\"cta\" onClick={toggle}>Меню</button>\r\n            </div>\r\n            <Customization toggle={toggle}\r\n                           modalMenu={modalMenu}\r\n                           checkedTypeText={checkedTypeText}\r\n                           workoutType={workoutType}\r\n                           ownText={ownText}\r\n                           testTime={testTime}\r\n                           sentenceNum={sentenceNum}\r\n                           handleOwnText={handleOwnText}\r\n                           toggleCheckbox={toggleCheckbox}\r\n                           toggleCheckboxWorkout={toggleCheckboxWorkout}\r\n                           handleSelectNumberSentence={handleSelectNumberSentence}\r\n                           handleSelectTime={handleSelectTime}\r\n                           setModalMenu={setModalMenu}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Menu;","import React, {useEffect, useState} from \"react\";\r\nimport useEventListener from \"@use-it/event-listener\";\r\n\r\nconst Letter = (props) => {\r\n\r\n    const {typed, curr, letter, showErr, setShowErr} = props;\r\n\r\n    const [spanClass, setSpanClass] = useState(\"letter\");\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (curr) {\r\n            setSpanClass(\"letter curr_letter\")\r\n            if (showErr) {\r\n                setSpanClass(\"letter curr_letter error_letter\");\r\n            }\r\n        }\r\n        if (typed) {\r\n            setSpanClass(\"letter hidden_letter\")\r\n        }\r\n    })\r\n\r\n    useEventListener(\"webkitAnimationEnd\", () => {\r\n        setShowErr(false);\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <span className={spanClass}>{letter}</span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Letter;","export default __webpack_public_path__ + \"static/media/error_icon.b44c0d7a.svg\";","export default __webpack_public_path__ + \"static/media/velocity.319e0032.svg\";","export default __webpack_public_path__ + \"static/media/chronometer.82bea8f7.svg\";","import React, {useEffect} from \"react\";\r\nimport chronometer_icon from \"../img/chronometer.svg\";\r\n\r\nconst Timer = (props) => {\r\n\r\n    const {\r\n        time,\r\n        started,\r\n        resTime,\r\n        setResTime,\r\n        currLetterIndex,\r\n        setSpeed,\r\n        handleStop,\r\n        errors,\r\n        workoutType,\r\n        testTime,\r\n        setTimeLimitStatus\r\n    } = props;\r\n\r\n    const MAX_TIME = 420000;\r\n\r\n    function handleTimerActivity() {\r\n        let diffTime = Date.now() - time;\r\n        let currTime = handleResTime(diffTime);\r\n        setResTime(currTime);\r\n        let currSpeed = handleSpeed(diffTime, currLetterIndex + 1);\r\n        setSpeed(currSpeed);\r\n        if ((workoutType && (diffTime >= testTime * 60000)) || (diffTime >= MAX_TIME)) {\r\n            setTimeLimitStatus(false);\r\n            handleStop(currLetterIndex + 2, errors)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            if (started) {\r\n                handleTimerActivity();\r\n            }\r\n        }, 10);\r\n        return () => {\r\n            clearInterval(timer);\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (started) {\r\n            handleTimerActivity();\r\n        }\r\n    }, [currLetterIndex]);\r\n\r\n    function handleSpeed(time, currLetterIndex) {\r\n        let sec = (time / 1000) / 60;\r\n        return Math.floor(currLetterIndex / sec);\r\n    }\r\n\r\n    function handleResTime(time) {\r\n        let minutes = Math.floor(((time / 1000) / 60));\r\n        let sec = Math.floor(time / 1000) % 60;\r\n        return `0${minutes}:${sec < 10 ? \"0\" + sec : sec}`;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <img src={chronometer_icon} className=\"chronometer_icon\"/> <span> {resTime}</span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Timer;","export default __webpack_public_path__ + \"static/media/accuracy.8faaaea3.svg\";","export default __webpack_public_path__ + \"static/media/gold.5b79fcaf.svg\";","export default __webpack_public_path__ + \"static/media/silver.94f0006e.svg\";","export default __webpack_public_path__ + \"static/media/copper.0140d7e1.svg\";","import React from \"react\";\r\nimport accuracy_icon from \"../img/accuracy.svg\";\r\nimport gold_medal from \"../img/gold.svg\";\r\nimport silver_medal from \"../img/silver.svg\";\r\nimport copper_medal from \"../img/copper.svg\";\r\n\r\nconst Results = (props) => {\r\n\r\n    const {accuracy, wpm} = props;\r\n\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-auto accuracy_info\">\r\n                <p>Точность / Скорость</p>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <span>{accuracy}%</span>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center mt-2 mt-sm-0\">\r\n                        <img src={accuracy_icon} className=\"accuracy_icon\"/>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center mt-3 mt-sm-0\">\r\n                        {wpm >= 40 ?\r\n                            <>\r\n                                <img src={gold_medal} className=\"medal_icon\"/>\r\n                            </>\r\n                            : wpm >= 35 ?\r\n                                <>\r\n                                    <img src={silver_medal} className=\"medal_icon\"/>\r\n                                </>\r\n                                : wpm >= 23 ?\r\n                                    <>\r\n                                        <img src={copper_medal} className=\"medal_icon\"/>\r\n                                    </>\r\n                                    : <span className=\"bad_medal\">Неплохо, но можно и лучше</span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Results;","import React, {useEffect, useState} from \"react\";\r\nimport useEventListener from \"@use-it/event-listener\";\r\nimport Letter from \"./Letter\";\r\nimport error_icon from \"../img/error_icon.svg\";\r\nimport velocity_icon from \"../img/velocity.svg\";\r\n\r\nimport Timer from \"./Timer\";\r\nimport Results from \"./Results\";\r\n\r\nconst TestWindow = (props) => {\r\n\r\n    const {text, loaded, handleClickTestBtn, setReload, FlipInX, testTime, workoutType, handleReload} = props;\r\n\r\n    const [queue, setQueue] = useState([]);\r\n\r\n    const [errors, setErrors] = useState(0);\r\n    const [showErr, setShowErr] = useState(false);\r\n\r\n    const [currLetterIndex, setCurrLetterIndex] = useState(-1);\r\n    const [filled, setFilled] = useState(false);\r\n\r\n    const [speed, setSpeed] = useState(0);\r\n\r\n    const [time, setTime] = useState(0);\r\n    const [resTime, setResTime] = useState(\"00:00\");\r\n    const [started, setStarted] = useState(false);\r\n    const [timeLimitStatus, setTimeLimitStatus] = useState(true);\r\n\r\n    const [showRes, setShowRes] = useState(false);\r\n    const [accuracy, setAccuracy] = useState(0);\r\n    const [wpm, setWPM] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        if (loaded && !filled) {\r\n            setQueue([...text[0]]);\r\n            setFilled(true);\r\n        }\r\n    });\r\n\r\n    useEventListener('keydown', ({key}) => {\r\n        if (currLetterIndex + 1 !== queue.length && timeLimitStatus) {\r\n            if (!(key === \"CapsLock\" || key === \"Shift\" || key === \"Enter\" || key === \"Backspace\" || key === \"Alt\")) {\r\n                if (key === queue[currLetterIndex + 1]) {\r\n                    if (currLetterIndex === -1) {\r\n                        setTime(Date.now());\r\n                        setStarted(true);\r\n                    } else if (currLetterIndex + 2 === queue.length) {\r\n                        handleStop(currLetterIndex + 2, errors)\r\n                    }\r\n                    setShowErr(false);\r\n                    setCurrLetterIndex(currLetterIndex + 1);\r\n                } else {\r\n                    if (currLetterIndex !== -1) {\r\n                        setShowErr(true);\r\n                        setErrors(errors + 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    function handleStop(currLetterIndex, errors) {\r\n        setStarted(false);\r\n        countAccuracy(currLetterIndex, errors);\r\n        countWPM(currLetterIndex);\r\n        setShowRes(true);\r\n    }\r\n\r\n    function countAccuracy(typedSymbols, errors) {\r\n        let res = (Math.floor((1 - (errors) / (typedSymbols + errors)) * 10000)) / 100;\r\n        setAccuracy(res);\r\n    }\r\n\r\n    function countWPM(currLetterIndex) {\r\n        let sec = ((Date.now() - time) / 1000) / 60;\r\n        let finalWPM = Math.floor((currLetterIndex / 5) / sec);\r\n        setWPM(finalWPM);\r\n    }\r\n\r\n    return (\r\n        <div className=\"outer_testing\">\r\n            <div className=\"inner_testing\">\r\n\r\n                <div className=\"row menu_res justify-content-center\">\r\n                    <div className=\"col-auto col-md\">\r\n                        <div className=\"row justify-content-center justify-content-md-start\">\r\n                            <div className=\"col-auto align-self-center mt-1 mt-sm-0\">\r\n                                <Timer time={time}\r\n                                       started={started}\r\n                                       resTime={resTime}\r\n                                       setResTime={setResTime}\r\n                                       currLetterIndex={currLetterIndex}\r\n                                       setSpeed={setSpeed}\r\n                                       handleStop={handleStop}\r\n                                       errors={errors}\r\n                                       workoutType={workoutType}\r\n                                       testTime={testTime}\r\n                                       setTimeLimitStatus={setTimeLimitStatus}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-auto align-self-center mt-2 mt-sm-0\">\r\n                                <img src={velocity_icon} className=\"velocity_icon\"/> {speed} зн/мин\r\n                            </div>\r\n                            <div className=\"col-auto mt-2 mt-sm-0 err_col\">\r\n                                {errors > 0 ? (<>\r\n                                    <img src={error_icon} className=\"err_icon\"/> <span\r\n                                    className=\"err_span\">{errors}</span>\r\n                                </>) : <>\r\n                                    <img src={error_icon} className=\"err_icon\"/> <span>{errors}</span>\r\n                                </>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-auto align-self-center btn_reload order-first order-md-last mt-2 mt-md-0\">\r\n                        <button className=\"corner-button\" onClick={handleReload}>\r\n                            <span>Заново</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {showRes ? (\r\n                    <FlipInX>\r\n                        <Results accuracy={accuracy}\r\n                                 wpm={wpm}\r\n                        />\r\n                    </FlipInX>\r\n                ) : (\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"input_test\">\r\n                                {queue.map((letter, i) =>\r\n                                    <Letter key={i}\r\n                                            typed={i === currLetterIndex}\r\n                                            curr={i - 1 === currLetterIndex}\r\n                                            letter={letter}\r\n                                            showErr={showErr}\r\n                                            setShowErr={setShowErr}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TestWindow;","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n\r\n    return (\r\n        <div className=\"loading_outer\">\r\n            <div className=\"lds-ellipsis\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React from \"react\";\r\n\r\nconst Intro = ({handleClickTestBtn}) => {\r\n\r\n    return (\r\n        <div className=\"col-md-12 col-xl-8\">\r\n            <div className=\"start_simulation\">\r\n                <p>Тренировка cлепой печати</p>\r\n                <button className=\"btn_test\" onClick={handleClickTestBtn}>\r\n                                        <span className=\"circle\" aria-hidden=\"true\">\r\n                                        <span className=\"icon arrow\"></span>\r\n                                        </span>\r\n                    <span className=\"button-text\">Начать тест</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Intro;","import React, {useEffect, useState} from \"react\";\r\nimport '../css/btn_style.scss';\r\nimport {useStates} from \"../context\";\r\nimport TestWindow from \"./TestWindow\";\r\nimport {fadeInLeft, flipInX} from 'react-animations';\r\nimport styled, {keyframes} from 'styled-components';\r\nimport Loader from \"./Loader\";\r\nimport Intro from \"./Intro\";\r\n\r\nconst Simulator = () => {\r\n\r\n    const {\r\n        url,\r\n        loading,\r\n        setLoading,\r\n        text,\r\n        setText,\r\n        checkedTypeText,\r\n        ownText,\r\n        defaultText,\r\n        testTime,\r\n        workoutType,\r\n        reload,\r\n        setReload,\r\n        modalMenu,\r\n        open,\r\n        setOpen\r\n    } = useStates();\r\n\r\n    useEffect(() => {\r\n        if(!modalMenu && reload) {\r\n            handleReload()\r\n        }\r\n    }, [modalMenu])\r\n\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    const FadeInLeft = styled.div`animation: 1s ${keyframes`${fadeInLeft}`}`;\r\n    const FlipInX = styled.div`animation: 4s ${keyframes`${flipInX}`}`;\r\n\r\n    function initializeStartWorkout(data) {\r\n        setText(data);\r\n        setLoaded(true);\r\n        setLoading(false);\r\n        setOpen(true);\r\n        setReload(false);\r\n    }\r\n\r\n    function provideFetchReq(url) {\r\n        if (checkedTypeText) {\r\n            initializeStartWorkout([ownText]);\r\n        } else {\r\n            fetch(url)\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    initializeStartWorkout(data);\r\n                })\r\n                .catch((error) => {\r\n                    initializeStartWorkout(defaultText);\r\n                })\r\n        }\r\n    }\r\n\r\n    function handleClickTestBtn() {\r\n        setLoading(true);\r\n        provideFetchReq(url);\r\n    }\r\n\r\n    function handleReload() {\r\n        setReload(true);\r\n        handleClickTestBtn();\r\n    }\r\n\r\n    return (\r\n        <div className=\"outer_simulator\">\r\n            <div className=\"simulator height\">\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : <></>}\r\n                <div className=\"container\">\r\n                    <div className=\"row height justify-content-start align-items-center\">\r\n                        {!open ? (\r\n                            <Intro handleClickTestBtn={handleClickTestBtn}/>\r\n                        ) : !reload ? (\r\n                            <>\r\n                                <FadeInLeft>\r\n                                    <div className=\"col-md-12 col-xl-10 offset-xl-1\">\r\n                                        <TestWindow text={text}\r\n                                                    loaded={loaded}\r\n                                                    handleClickTestBtn={handleClickTestBtn}\r\n                                                    setReload={setReload}\r\n                                                    FlipInX={FlipInX}\r\n                                                    testTime={testTime}\r\n                                                    workoutType={workoutType}\r\n                                                    handleReload={handleReload}\r\n                                        />\r\n                                    </div>\r\n                                </FadeInLeft>\r\n                            </>\r\n                        ) : <></>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Simulator;","import React, {useState} from \"react\";\r\nimport {Modal, ModalHeader, ModalBody, ModalFooter, Button} from \"reactstrap\";\r\n\r\nconst Instructions = () => {\r\n\r\n    const [modalInstructions, setModalInstructions] = useState(true);\r\n\r\n    const toggleInstructions = () => setModalInstructions(!modalInstructions);\r\n\r\n    return (\r\n        <Modal isOpen={modalInstructions} toggle={toggleInstructions}>\r\n            <ModalHeader toggle={toggleInstructions}>\r\n                <p className=\"modal_header\">Инструкция</p>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <div className=\"modalInstructions_body\">\r\n                    <div className=\"mt-1\">\r\n                        <p className=\"menu_label modalInstructions_bold\">Старт</p>\r\n                        <p>\r\n                            Чтобы начать тестирование воспользуйтесь кнопкой <span className=\"modalInstructions_bold\">НАЧАТЬ ТЕСТ</span>\r\n                            <br/>После загрузки вам откроется тренировочное пространство, где будут отображены\r\n                            предлагаемый\r\n                            текст и ваши результаты.\r\n                        </p>\r\n                        <p>\r\n                            Чтобы запустить отсчет времени, и соответственно, сам тест, необходимо ввести первый\r\n                            предлагаемый символ.\r\n                            <br/>В зависимости от того, какой режим тренировки вы выбрали, процесс\r\n                            остановится в следующих случаях:\r\n                            <ul>\r\n                                <li>\r\n                                    Предложенный текст был набран полностью;\r\n                                </li>\r\n                                <li>\r\n                                    Закончилось установленное время;\r\n                                </li>\r\n                                <li>\r\n                                    Был превышен максимальный лимит времени тестирования.\r\n                                </li>\r\n                            </ul>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <p className=\"menu_label modalInstructions_bold\">Настройки</p>\r\n                        <p>\r\n                            Чтобы задать особые условия тренировки воспользуйтесь кнопкой <span\r\n                            className=\"modalInstructions_bold\">Меню</span>\r\n                        </p>\r\n                        <p>\r\n                            Здесь вы можете указать источник текста, его размер, а также формат самого тестирования. У\r\n                            вас\r\n                            есть возможность проверить свои навыки слепой печати в режиме на скорость с ограниченным\r\n                            временем, а также проявить мастерство при наборе текста на время.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"secondary\" onClick={toggleInstructions}>Закрыть</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default Instructions;","import Menu from \"./components/Menu\";\nimport Simulator from \"./components/Simulator\";\nimport Instructions from \"./components/Instructions\";\nimport {ContentProvider} from \"./context\";\nimport React from \"react\";\n\nfunction App() {\n\n    return (\n        <div className=\"app\">\n            <ContentProvider>\n                <Instructions />\n                <Menu />\n                <Simulator />\n            </ContentProvider>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}